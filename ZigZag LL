package LinkedList;

public class ZigZag {

    class Node {
        int data;
        Node next;

        Node(int data) {
            this.data = data;
            this.next = null;
        }
    }

    public static Node head;
    public static Node tail;

    public void addNode(int data) {
        Node newNode = new Node(data);
        if (head == null) {
            head = tail = newNode;
            return;
        }
        tail.next = newNode;
        tail = newNode;
    }

    private Node midNode(Node knot) {
        Node slow = knot;
        Node fast = knot.next;
        while (fast != null && fast.next != null) {
            slow = slow.next;
            fast = fast.next.next;
        }
        return slow;
    }

    private Node reversNode(Node knot) {
        Node prev = null;
        Node curr = knot;
        Node upcome;
        while (curr != null) {
            upcome = curr.next;
            curr.next = prev;
            prev = curr;
            curr = upcome;
        }
        return prev;
    }

    public void zigzag() {
        Node mid = midNode(head);
        Node right = mid.next;
        mid.next = null;
        Node rightHead = reversNode(right);
        Node leftHead = head;
        // Node temp = new Node(-1);
        // Node zigzagNode = temp; // part of 1st method
        Node nextL, nextR;
        while (leftHead != null && rightHead != null) {
            // ZigZag traversal 1st method

            /*
             * temp.next = leftHead;
             * nextL=leftHead.next;
             * temp = temp.next;
             * temp.next = rightHead;
             * nextR = rightHead.next;
             * temp = temp.next;
             * leftHead = nextL;
             * rightHead =nextR;
             */

            // ZigZag traversal 2nd method
            nextL = leftHead.next;
            leftHead.next = rightHead;
            nextR = rightHead.next;
            rightHead.next = nextL;
            leftHead = nextL;
            rightHead = nextR;
        }
        // head = zigzagNode.next; // part of 1st methode
    }

    public void print() {
        Node move = head;
        while (move != null) {
            System.out.print(move.data + "->");
            move = move.next;
        }
        System.out.println("null");

    }

    public static void main(String[] args) {
        ZigZag ll = new ZigZag();
        ll.addNode(1);
        ll.addNode(2);
        ll.addNode(3);
        ll.addNode(4);
        ll.addNode(5);
        ll.addNode(6);
        ll.print();
        ll.zigzag();
        ll.print();

    }
}
